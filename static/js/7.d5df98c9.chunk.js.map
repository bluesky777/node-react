{"version":3,"sources":["services/AuthServices.js","actions/AuthActions.js","components/Login.jsx","data/api.js"],"names":["AuthService","validationData","api","post","attempLogin","datos","dispatch","getState","type","AUTH_TYPES","LOGIN_LOADING","then","response","data","user","LOGIN_SUCCESS","payload","err","AUTH_ERROR","Login","useState","username","password","setDatos","navigation","useNavigate","isLoading","useSelector","state","AuthReducer","isLogged","useDispatch","useEffect","handleChange","e","target","name","value","onSubmit","a","preventDefault","console","log","Grid","Paper","elevation","style","padding","height","width","margin","align","Avatar","backgroundColor","TextField","onChange","label","placeholder","fullWidth","required","variant","FormControlLabel","control","Checkbox","color","Button","Typography","Link","href","serverUrl","window","location","hostname","request","axios","create","baseURL","interceptors","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"mappings":"6RAKaA,EACF,SAACC,GACJ,OAAOC,IAAIC,KAAJ,eAAyBF,ICe3BG,EAAc,SAACC,GAAD,OAAW,SAACC,EAAUC,GAC/CD,EAAS,CAAEE,KAAMC,IAAWC,gBAC5BV,EAAkBK,GAAOM,MACvB,SAACC,GACKA,EAASC,KAAKC,MAChBR,EAAS,CAAEE,KAAMC,IAAWM,cAAeC,QAASJ,EAASC,UAGjE,SAACI,GACCX,EAAS,CAAEE,KAAMC,IAAWS,kB,cC8CnBC,UArED,WAAO,IAAD,EAEUC,mBAAS,CAACC,SAAU,GAAIC,SAAU,KAF5C,mBAETjB,EAFS,KAEFkB,EAFE,KAGVC,EAAaC,cACbC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYH,aACrDI,EAAWH,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYC,YACpDxB,EAAWyB,cAMjBC,qBAAU,WACFF,GACAN,EAAW,OAEd,CAACM,EAAUN,IAEhB,IAAMS,EAAe,SAACC,GAClBX,EAAS,2BAAIlB,GAAL,kBAAa6B,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAG5CC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAEM,kBACEd,EAFS,iDAGbe,QAAQC,IAAIrC,GACZC,EAASF,EAAYC,IAErBmB,EAAW,KANE,2CAAH,sDASd,OACI,cAACmB,EAAA,EAAD,UACI,sBAAML,SAAUA,EAAhB,SACI,eAACM,EAAA,EAAD,CAAOC,UAAW,GAAIC,MA1BjB,CAACC,QAAS,GAAGC,OAAO,OAAOC,MAAM,IAAKC,OAAO,aA0BlD,UACI,eAACP,EAAA,EAAD,CAAMQ,MAAM,SAAZ,UACI,cAACC,EAAA,EAAD,CAAQN,MA3BV,CAACO,gBAAgB,WA2Bf,SACI,cAAC,IAAD,MAEJ,4CAEJ,cAACC,EAAA,EAAD,CAAWC,SAAUtB,EAAcuB,MAAM,WAAWC,YAAY,iBAAiBC,WAAS,EAACC,UAAQ,EAACC,QAAQ,aAC5G,cAACN,EAAA,EAAD,CAAWC,SAAUtB,EAAcuB,MAAM,WAAWC,YAAY,iBAAiBjD,KAAK,WAAWkD,WAAS,EAACC,UAAQ,EAACC,QAAQ,aAC5H,cAACC,EAAA,EAAD,CACIC,QACA,cAACC,EAAA,EAAD,CACI3B,KAAK,WACL4B,MAAM,YAGVR,MAAM,gBAEV,cAACS,EAAA,EAAD,CAAQzD,KAAK,SAASwD,MAAM,UAAUJ,QAAQ,YAAYd,MA1C3D,CAACI,OAAO,SA0CoEQ,WAAS,EAApF,qBACA,cAACQ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,KAAK,IAAX,iCAIJ,eAACF,EAAA,EAAD,gCACI,cAACC,EAAA,EAAD,CAAMC,KAAK,IAAX,iC,gCCnExB,qBAKMC,EACyB,cAA7BC,OAAOC,SAASC,SAJE,4BACC,qDAKfC,EAAUC,IAAMC,OAAO,CAC3BC,QAASP,IAGXI,EAAQI,aAAaJ,QAAQK,KAC3B,SAAUC,GACR,IAAMC,EAAQC,aAAaC,QAAQ,SAKnC,OAJIF,IACFD,EAAOI,QAAQC,cAAgB,UAAYJ,GAGtCD,KAET,SAAUM,GAER,OAAOC,QAAQC,OAAOF,MAK1BZ,EAAQI,aAAajE,SAASkE,KAC5B,SAAUlE,GAER,OAAOA,KAET,SAAUyE,GAER,OAAOC,QAAQC,OAAOF,MAIXZ","file":"static/js/7.d5df98c9.chunk.js","sourcesContent":["// import axios from 'axios';\nimport api from \"../data/api\";\n\n// const baseURL = 'http://localhost/api';\n\nexport const AuthService = {\n    login: (validationData) => {\n        return api.post(`/login/login`, validationData);\n    },\n    logout: () => {\n        return api.post(`/login/logout`);\n    },\n};","import { AUTH_TYPES } from \"./AuthTypes\";\nimport api from \"../data/api\";\nimport { AuthService } from \"../services/AuthServices\";\n\nexport const loadUserFromToken = () => (dispatch, getState) => {\n  dispatch({ type: AUTH_TYPES.LOGIN_LOADING });\n  \n  if (!localStorage.getItem('token')) {\n    dispatch({ type: AUTH_TYPES.AUTH_ERROR });\n  }\n  \n  api.get(\"/login/load-user-from-token\").then(\n    (response) => {\n        dispatch({ type: AUTH_TYPES.USER_LOADED_FROM_TOKEN, user: response.data });\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch({ type: AUTH_TYPES.AUTH_ERROR });\n    }\n  );\n};\n\nexport const attempLogin = (datos) => (dispatch, getState) => {\n  dispatch({ type: AUTH_TYPES.LOGIN_LOADING });\n  AuthService.login(datos).then(\n    (response) => {\n      if (response.data.user) {\n        dispatch({ type: AUTH_TYPES.LOGIN_SUCCESS, payload: response.data });\n      }\n    },\n    (err) => {\n      dispatch({ type: AUTH_TYPES.AUTH_ERROR });\n    }\n  );\n};\n\nexport const attempLogout = () => (dispatch) => {\n  AuthService.logout().then(\n    (response) => {\n      dispatch({ type: AUTH_TYPES.LOGGED_OUT });\n    },\n    (err) => {\n      dispatch({ type: AUTH_TYPES.AUTH_ERROR });\n    }\n  );\n};\n","import { Avatar, Button, Checkbox, FormControlLabel, Grid, Link, Paper, TextField, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { attempLogin } from \"../actions/AuthActions\";\nimport { useState, useEffect } from 'react';\n\n\nconst Login = () => {\n\n    const [datos, setDatos] = useState({username: '', password: ''});\n    const navigation = useNavigate();\n    const isLoading = useSelector((state) => state.AuthReducer.isLoading);\n    const isLogged = useSelector((state) => state.AuthReducer.isLogged);\n    const dispatch = useDispatch();\n\n    const paperStyle={padding :20,height:'70vh',width:280, margin:\"20px auto\"}\n    const avatarStyle={backgroundColor:'#1bbd7e'}\n    const btnstyle={margin:'8px 0'}\n\n    useEffect(() => {\n        if (isLogged) {\n            navigation('/');\n        }\n      }, [isLogged, navigation]);\n    \n    const handleChange = (e) => {\n        setDatos({...datos, [e.target.name]: e.target.value});\n    }\n    \n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (isLoading) return;\n        console.log(datos);\n        dispatch(attempLogin(datos));\n        // TODO remove this\n        navigation('/');\n    }\n\n    return (\n        <Grid>\n            <form onSubmit={onSubmit}>\n                <Paper elevation={10} style={paperStyle}>\n                    <Grid align='center'>\n                        <Avatar style={avatarStyle}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <h2>Sign In</h2>\n                    </Grid>\n                    <TextField onChange={handleChange} label='Username' placeholder='Enter username' fullWidth required variant=\"standard\" />\n                    <TextField onChange={handleChange} label='Password' placeholder='Enter password' type='password' fullWidth required variant=\"standard\" />\n                    <FormControlLabel\n                        control={\n                        <Checkbox\n                            name=\"checkedB\"\n                            color=\"primary\"\n                        />\n                        }\n                        label=\"Remember me\"\n                    />\n                    <Button type='submit' color='primary' variant=\"contained\" style={btnstyle} fullWidth>Sign in</Button>\n                    <Typography>\n                        <Link href=\"#\" >\n                            Forgot password ?\n                    </Link>\n                    </Typography>\n                    <Typography > Have an account ?\n                        <Link href=\"#\" >\n                            Sign Up \n                    </Link>\n                    </Typography>\n                </Paper>\n            </form>\n        </Grid>\n    )\n}\n\nexport default Login;","import axios from \"axios\";\n\nconst localServer = \"http://localhost:4000/api\";\nconst globalServer = \"https://audit.micolevirtual.com/audit7-laravel/api\";\n// eslint-disable-next-line no-restricted-globals\nconst serverUrl =\n  window.location.hostname === \"localhost\" ? localServer : globalServer;\n\nconst request = axios.create({\n  baseURL: serverUrl,\n});\n\nrequest.interceptors.request.use(\n  function (config) {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = \"Bearer \" + token;\n    }\n\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\nrequest.interceptors.response.use(\n  function (response) {\n    // console.log(response);\n    return response;\n  },\n  function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\nexport default request;\n"],"sourceRoot":""}