{"version":3,"sources":["App.js","reportWebVitals.js","reducers/AuthReducer.jsx","actions/PageTypes.js","reducers/PageReducer.jsx","reducers/index.js","store.js","index.js","actions/AuthTypes.js"],"names":["Login","React","lazy","Home","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","token","localStorage","getItem","isLogged","isLoading","loggedOut","user","PAGE_TYPES","sidebarShow","reducers","combineReducers","AuthReducer","state","action","type","AUTH_TYPES","LOGIN_LOADING","LOGIN_SUCCESS","console","log","setItem","payload","USER_LOADED_FROM_TOKEN","LOGGED_OUT","LOGIN_FAILED","AUTH_ERROR","PageReducer","middleware","ReduxThunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","fallback","document","getElementById","LOGOUT_LOADING","GET_USERS"],"mappings":"wNAOMA,EAAQC,IAAMC,MAAK,kBAAM,8DACzBC,EAAOF,IAAMC,MAAK,kBAAM,8DAefE,MAZf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACH,EAAD,MACzB,cAAC,IAAD,CAAOE,KAAK,QAAQC,QAAS,cAACN,EAAD,YCJtBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6CCLRQ,EAAe,CACnBC,MAAOC,aAAaC,QAAQ,SAC5BC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,KAAM,MCPKC,EACK,eCGZR,EAAe,CACnBS,YAHuB,cCEZC,EAAWC,0BAAgB,CACpCC,YHKuB,WAAmC,IAAlCC,EAAiC,uDAAzBb,EAAcc,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKC,IAAWC,cACdJ,EAAK,2BACAA,GADA,IAEHR,WAAW,IAEb,MAEF,KAAKW,IAAWE,cACdC,QAAQC,IAAIN,GACZZ,aAAamB,QAAQ,QAASP,EAAOQ,QAAQrB,OAE7CY,EAAK,2BACAA,GADA,IAEHR,WAAW,EACXE,KAAMO,EAAOQ,QAAQf,KACrBN,MAAOa,EAAOQ,QAAQrB,MACtBG,UAAU,EACVE,WAAW,IAEb,MAEF,KAAKU,IAAWO,uBACdJ,QAAQC,IAAIN,GAEZD,EAAK,2BACAA,GADA,IAEHR,WAAW,EACXE,KAAMO,EAAOP,KACbH,UAAU,EACVE,WAAW,IAEb,MAEF,KAAKU,IAAWQ,WACdL,QAAQC,IAAIN,GAEZD,EAAK,2BACAA,GADA,IAEHN,KAAM,KACNN,MAAO,KACPG,UAAU,EACVE,WAAW,IAEb,MAEF,KAAKU,IAAWS,aAChB,KAAKT,IAAWU,WAEdb,EAAK,2BACAA,GADA,IAEHN,KAAM,KACNF,WAAW,EACXC,WAAW,IAOjB,OAAOO,GGjELc,YDEuB,WAAmC,IAAlCd,EAAiC,uDAAzBb,EAAcc,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKP,EACHN,aAAamB,QAAQ,cAAeP,EAAOL,aAC3CI,EAAK,2BACAA,GADA,IAEHJ,YAAaK,EAAOL,cAO1B,OAAOI,KEfHe,EAAa,CAACC,KAMLC,EAJDC,sBACZrB,EACAsB,8BAAoBC,kBAAe,WAAf,EAAmBL,KCDzCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAUC,SAAU,0BAApB,SACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINQ,SAASC,eAAe,SAM1BhD,K,+BCvBA,kCAAO,IAAMyB,EAAa,CACtBE,cAAe,gBACfD,cAAe,gBACfuB,eAAgB,iBAChBhB,WAAY,aACZD,uBAAwB,yBACxBkB,UAAW,YACXf,WAAY,aACZD,aAAc,kB","file":"static/js/main.6e87a4b2.chunk.js","sourcesContent":["import '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nconst Login = React.lazy(() => import(\"./components/Login\"));\nconst Home = React.lazy(() => import(\"./components/Home\"));\n\n\nfunction App () {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />}></Route>\n        <Route path=\"login\" element={<Login />}></Route>\n        \n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { AUTH_TYPES } from \"../actions/AuthTypes\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isLogged: false,\n  isLoading: false,\n  loggedOut: true,\n  user: null,\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH_TYPES.LOGIN_LOADING:\n      state = {\n        ...state,\n        isLoading: true,\n      };\n      break;\n\n    case AUTH_TYPES.LOGIN_SUCCESS:\n      console.log(action);\n      localStorage.setItem(\"token\", action.payload.token);\n\n      state = {\n        ...state,\n        isLoading: false,\n        user: action.payload.user,\n        token: action.payload.token,\n        isLogged: true,\n        loggedOut: false,\n      };\n      break;\n\n    case AUTH_TYPES.USER_LOADED_FROM_TOKEN:\n      console.log(action);\n\n      state = {\n        ...state,\n        isLoading: false,\n        user: action.user,\n        isLogged: true,\n        loggedOut: false,\n      };\n      break;\n\n    case AUTH_TYPES.LOGGED_OUT:\n      console.log(action);\n\n      state = {\n        ...state,\n        user: null,\n        token: null,\n        isLogged: false,\n        loggedOut: true,\n      };\n      break;\n  \n    case AUTH_TYPES.LOGIN_FAILED:\n    case AUTH_TYPES.AUTH_ERROR:\n      //localStorage.removeItem(\"token\");\n      state = {\n        ...state,\n        user: null,\n        isLoading: false,\n        loggedOut: true,\n      };\n      break;\n\n    default:\n      break;\n  }\n  return state;\n};\n","export const PAGE_TYPES = {\n    SHOW_SIDEBAR: \"SHOW_SIDEBAR\",\n};\n","import { PAGE_TYPES } from \"../actions/PageTypes\";\n\nlet sidebarShowInitial = \"responsive\";\n\nconst initialState = {\n  sidebarShow: sidebarShowInitial,\n};\n\nexport const PageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PAGE_TYPES.SHOW_SIDEBAR:\n      localStorage.setItem(\"sidebarShow\", action.sidebarShow);\n      state = {\n        ...state,\n        sidebarShow: action.sidebarShow,\n      };\n      break;\n\n    default:\n      break;\n  }\n  return state;\n};\n","import { combineReducers } from \"redux\";\nimport { AuthReducer } from \"./AuthReducer\";\nimport { PageReducer } from \"./PageReducer\";\n\nexport const reducers = combineReducers({\n    AuthReducer,\n    PageReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { reducers } from \"./reducers\";\n\nconst middleware = [ReduxThunk];\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Suspense} from 'react'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={'Loading announcement...'}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","export const AUTH_TYPES = {\n    LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n    LOGIN_LOADING: \"LOGIN_LOADING\",\n    LOGOUT_LOADING: \"LOGOUT_LOADING\",\n    LOGGED_OUT: \"LOGGED_OUT\",\n    USER_LOADED_FROM_TOKEN: \"USER_LOADED_FROM_TOKEN\",\n    GET_USERS: \"GET_USERS\",\n    AUTH_ERROR: \"AUTH_ERROR\",\n    LOGIN_FAILED: \"LOGIN_FAILED\",\n  };\n  "],"sourceRoot":""}